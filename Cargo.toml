# https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]
resolver = "2" # Important! wgpu/Bevy needs this!
members = [
	# "crates/*"
	# "crates/forky_ai",
	"crates/forky_bevy",
	"crates/forky_bevy/test",
	"crates/forky_cli",
	"crates/forky_cli/test",
	"crates/forky_core",
	"crates/forky_core/test",
	# "crates/forky_esp",
	"crates/forky_fs",
	"crates/forky_fs/test",
	"crates/forky_play",
	"crates/forky_web",
	"crates/forky_web/test",
	"crates/forky_web/macros",
]

[workspace.package]
version = "0.2.0"
edition = "2021"
license = "MIT OR Apache-2.0"
readme = "README.md"
authors = ["Peter Hayman <peteyhayman@gmail.com>"]
description = "Rust Utilities"
documentation = "https://mrchantey.github.io/forky/docs"
repository = "https://github.com/mrchantey/forky"

[workspace.dependencies]
### internal ###
forky = { path = "./", version = "0.2.0" }
# forky_ai = { path = "./crates/forky_ai", version = "0.1.43" }
forky_bevy = { path = "./crates/forky_bevy", version = "0.2.0" }
forky_cli = { path = "./crates/forky_cli", version = "0.2.0" }
forky_core = { path = "./crates/forky_core", version = "0.2.0" }
forky_fs = { path = "./crates/forky_fs", version = "0.2.0" }
forky_esp = { path = "./crates/forky_esp", version = "0.2.0-rc.5" }
forky_play = { path = "./crates/forky_play", version = "0.2.0" }
forky_web = { path = "./crates/forky_web", version = "0.2.0" }
forky_web_macros = { path = "./crates/forky_web/macros", version = "0.2.0" }

### game ###

# sweet = { path = "../sweet", features = ["bevy"] }
sweet = { version = "0.2", features = ["bevy"] }
bevy = { version = "0.15", default-features = false }
# bevy = { git = "https://github.com/bevyengine/bevy", rev = "0c959f77007c29eead7f902bddd3342a1ecbca20", default-features = false }

# bevy-inspector-egui = "0.23.4"
# bevy_mod_debugdump = "0.10.0"
# bevy_rapier3d = { version = "0.25.0", features = ["debug-render-3d"] }
# wgpu = { version = "0.19.1" }

### utility ###
log = "0.4"
pretty_env_logger = "0.4"
anyhow = "1.0.75"
time = "0.3.20"
petgraph = { version = "0.6.4", features = ["serde-1"] }
bytemuck = "1.13.1"
heck = "0.4.1"

## attributes ###
num-traits = "0.2.15"
derive_deref = "1.1.1"
strum = "0.25.0"
strum_macros = "0.25.0"
extend = "1.1.2"

### io ###
flume = "0.11.0"
clap = { version = "4.2", features = ["string"] }
colorize = "0.1.0"
crossterm = "0.25.0"
dotenv = "0.15.0"
gag = "1.0.0"
glob = "0.3.1"
notify = "6.0.1"
notify-debouncer-full = "0.2.0"
serde = { version = "1.0.193", features = ["derive"] }
serde_json = "1.0.108"
ciborium = "0.2"

### math ###
sha2 = "0.10.7"
hex = "0.4.3"
rand = { version = "0.8.5" }
getrandom = { version = "0.2.9", features = ["js"] }
rgb = "0.8.34"
plotters = "0.3.4"
plotters-canvas = "0.3.0"

### async ###
futures = "0.3.28"
futures-util = "0.3.28"
tokio = { version = "1.27.0", features = [
	"macros",
	"rt",
	"rt-multi-thread",
	"time",
] }
tokio-stream = "0.1.14"
rayon = "1.7.0"

### macros ###
proc-macro2 = "1.0.47"
syn = { version = "2.0.*", features = ["full"] }
quote = "1.0.21"
rstml = "0.11.2"
typed-builder = "0.18.0"

### esp ###
wasmi = "0.20.0"

### server ###
axum = "0.6.19"
hyper = { version = "0.14.27", features = ["full"] }
axum-server = { version = "0.5.1", features = ["tls-rustls"] }
tower = "0.4.13"
tower-http = { version = "0.4.3", features = ["fs", "cors"] }
tower-livereload = "0.8.0"


### wasm ###
console_log = "1.0"
js-sys = "0.3.63"
wasm-bindgen = "0.2.86"
wasm-bindgen-futures = "0.4.36"
console_error_panic_hook = "0.1.7"
cssparser = "0.31.2"

[package]
name = "forky"
version = { workspace = true }
edition = { workspace = true }
authors = { workspace = true }
documentation = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
description = { workspace = true }
repository = { workspace = true }

[features]
default = []
fs = ["dep:forky_fs"]
web = ["dep:forky_web"]
cli = ["dep:forky_cli"]
bevy = ["dep:forky_bevy"]

[dependencies]
forky_core.workspace = true
forky_fs = { workspace = true, optional = true }
forky_web = { workspace = true, optional = true }
forky_cli = { workspace = true, optional = true }
forky_bevy = { workspace = true, optional = true }

#https://rustwasm.github.io/wasm-bindgen/api/web_sys/
#https://github.com/rustwasm/wasm-bindgen/blob/main/crates/web-sys/Cargo.toml
[workspace.dependencies.web-sys]
version = "0.3.61"
features = [
	# HTML
	'Headers',
	'Document',
	'Element',
	'Window',
	'HtmlIFrameElement',
	'HtmlHeadElement',
	'HtmlLinkElement',
	'HtmlScriptElement',
	'HtmlButtonElement',
	'HtmlInputElement',
	'HtmlDivElement',
	'HtmlParagraphElement',
	'ResizeObserver',
	'ResizeObserverBoxOptions',
	'ResizeObserverEntry',
	'ResizeObserverOptions',
	'ResizeObserverSize',
	'DomRect',
	'DomRectReadOnly',
	# Style
	'MediaQueryList',
	# Events
	'MouseEvent',
	'KeyboardEvent',
	# JS
	'Gpu',
	'console',
	'Navigator',
	'Performance',
	'WebGl2RenderingContext',
	# Audio
	'AudioContext',
	'AudioDestinationNode',
	'AudioNode',
	'AudioParam',
	'BiquadFilterNode',
	'BiquadFilterOptions',
	'BiquadFilterType',
	'DelayNode',
	'DelayOptions',
	'GainNode',
	'OscillatorNode',
	'OscillatorType',
	# Fetch
	'Request',
	'RequestInit',
	'RequestMode',
	'Response',
	# Blob
	'Blob',
	'BlobEvent',
	'BlobEventInit',
	'BlobPropertyBag',
	# Elements
	'HtmlAnchorElement',
	'HtmlCanvasElement',
	'HtmlInputElement',
	'File',
	'FileList',
	# Url
	'Url',
	'History',
	'Location',
	'UrlSearchParams',
	# Sensors
	'DeviceOrientationEvent',
	'DeviceMotionEvent',
	'DeviceAcceleration',
	'DeviceRotationRate',
	# Sockets
	'BinaryType',
	'FileReader',
	'ErrorEvent',
	'MessageEvent',
	'ProgressEvent',
	'WebSocket',
	# XR
	'XrBoundedReferenceSpace',
	'XrEye',
	'XrFrame',
	'XrHandedness',
	'XrInputSource',
	'XrInputSourceArray',
	'XrInputSourceEvent',
	'XrInputSourceEventInit',
	'XrInputSourcesChangeEvent',
	'XrJointPose',
	'XrJointSpace',
	'XrPose',
	'XrReferenceSpace',
	'XrReferenceSpaceEvent',
	'XrReferenceSpaceEventInit',
	'XrReferenceSpaceType',
	'XrRenderState',
	'XrRenderStateInit',
	'XrRigidTransform',
	'XrSession',
	'XrSessionEvent',
	'XrSessionEventInit',
	'XrSessionInit',
	'XrSessionMode',
	'XrSpace',
	'XrTargetRayMode',
	'XrView',
	'XrViewerPose',
	'XrViewport',
	'XrVisibilityState',
	'XrWebGlLayer',
	'XrWebGlLayerInit',
	'XrSystem',
]
